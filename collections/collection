{
	"info": {
		"_postman_id": "89f9f850-e3ab-4670-8609-dedcb3f1a537",
		"name": "Gestion des utilisateurs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "544510",
		"_collection_link": "https://www.postman.com/blackjuker/workspace/qa-test/collection/544510-89f9f850-e3ab-4670-8609-dedcb3f1a537?action=share&source=collection_link&creator=544510"
	},
	"item": [
		{
			"name": "get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"verification de la presence de la propiet id\", () =>{\r",
							"    const rep = pm.response.json();\r",
							"    pm.expect(rep.data).to.have.property('data:id');\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/users?page=2",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get single user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const st = pm.response.status\r",
							"    pm.expect(st).to.be.eqls(\"OK\")\r",
							"    console.log('******* st='+st)\r",
							"});\r",
							"\r",
							"pm.test(\"verification de la presence de la propiet id\", () =>{\r",
							"    const rep = pm.response.json();\r",
							"    pm.expect(rep.data).to.have.property('id');\r",
							"})\r",
							"\r",
							"pm.test(\"test du id de lurl correspont a celui du body\",() =>{\r",
							"    const rep = pm.response.json();\r",
							"    pm.expect(\"\"+rep.data.id).to.be.eqls(pm.collectionVariables.get('user_id'))\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/users/{{user_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "creer un nouvel utilisateur",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/users/",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://reqres.in/api",
			"type": "default"
		},
		{
			"key": "user_id",
			"value": "5",
			"type": "string"
		}
	]
}